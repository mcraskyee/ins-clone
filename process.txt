准备工作：
1\ git init
2\ 创建前端npm create vite@latest frontend --template react, 选js
3\ npm install, npm run dev跑前端
4\去后端server.js, npm init
5\后端安装express, nodemon -D express-fileupload,把node modules gitignore了
6\试着编辑并启动server(如果端口被占用：lsof -i tcp:端口号，kill -9 id号)

初始化react：
7\把src/app.jsx初始化，导入只保留app.css，return换成hello world
8\删除react.svg

创建远程仓库
7\git上new repository，description里写所需技术站,不要关闭跳转页面
8\git add .
9\git commit -m "提交理由"
10\git status检查一下提交状态
11\git log检查你传上去了什么
12\按照git页面提示的命令git remote链接
13\git remote -v检查是不是连上了
14\git push -u origin master上传



前端个人主页部分
安装styled-components（样式库）, react-dom, react-router-dom（前端路由）, axios, @reduxjs/toolkit, react-redux
(redux：为了任何组件之间都能打破等级传输数据)
导入react router dom,包括BrowserRouter as Router,Route,Routes,Navigate
src中创建component，
每个上述文件夹里都有jsx, styles.js文件
初始化每个的时候可以在jsx中先加入一个return和文件名用于标记, 然后在app.js中导入
在app.js中以层次，把browser-router，routes，route的标签搭好，路径填好
去浏览器输入一下相应路径，看能不能看到相应内容
profile下面再创建profile-info，profile-posts，把profile里的函数copy进去，改一下名字
在styles.js中写css, 在jsx中导入，把标签名换成组件名
显示不同人的不同id，用useParams
在redux里放一些假数据用于测试


注册页
创建文件夹，创建好jsx和styles.js
在jsx中写好导入导出
在app.js中挂载路由
在样式文件中导入style components（样式库）
写好样式
在jsx中导入样式，把标签全部替换成元素的名字
(所有需要的本地图片都要导入)
链接可以用react router dom 里的link（to）和useNavigate()
先写布局，再写逻辑


后端
安装mongoose, config, cors, jsonwebtoken, bcrypt
路由前导入cors
创建路由文件夹，写相应的路由，导入express和router
创建controller文件夹写call back function，写里面具体的函数
创建config文件夹，写数据库
先在路由文件中写路由并导出，把路由导入并挂到server上
回到路由文件中，把路由路径挂在路由上，只留api名在这里
回到controller中写具体的api函数，导出，在同名路由中导入
（server挂routes文件名，routes文件挂api函数名）
在api函数中把try catch架构搭好
写api的时候，一般需要先定义并拿到req.body，去server中路由前解析json,写好后去postman测试
然后再用axios和前端互动

数据库
连数据库，在defaul.json里写mongo链接(atlas=>connect=>compass)，
在链接后加上项目名，把密码改成自己密码
在db.json里把mongoose和config导入，链接mongo链接，写链接函数，导出，挂到server上
把server和数据库跑起来
新增model文件夹，创建user.js，在里面制定数据库schema，导出
在controller中把数据库schema, bcrypt, jsonwebtoken导入

改写redux
在redux文件夹中的store.js和userdata中配置redux
到main.js中,从react-redux中导入Provider，把store也导入。把App包裹在provider里
把store挂在provider上
然后去前端相关文件中导入useDispatch，导入userdata中的saverUserId，定义好它
在获取数据的函数中dispatch saverUserId